MRtrix 3.0.4-37-g5489889a           mmrrccoonnvveerrtt                        Apr 14 2023

     mmrrccoonnvveerrtt: part of the MRtrix3 package

SSYYNNOOPPSSIISS

     Perform conversion between different file types and optionally extract a
     subset of the input image

UUSSAAGGEE

     _m_r_c_o_n_v_e_r_t [ options ] input output

        _i_n_p_u_t        the input image.

        _o_u_t_p_u_t       the output image.


DDEESSCCRRIIPPTTIIOONN

     If used correctly, this program can be a very useful workhorse. In
     addition to converting images between different formats, it can be used to
     extract specific studies from a data set, extract a specific region of
     interest, or flip the images. Some of the possible operations are
     described in more detail below.

     Note that for both the -coord and -axes options, indexing starts from 0
     rather than 1. E.g. -coord 3 <#> selects volumes (the fourth dimension)
     from the series; -axes 0,1,2 includes only the three spatial axes in the
     output image.

     Additionally, for the second input to the -coord option and the -axes
     option, you can use any valid number sequence in the selection, as well as
     the 'end' keyword (see the main documentation for details); this can be
     particularly useful to select multiple coordinates.

     The -vox option is used to change the size of the voxels in the output
     image as reported in the image header; note however that this does not
     re-sample the image based on a new voxel size (that is done using the
     mrgrid command).

     By default, the intensity scaling parameters in the input image header are
     passed through to the output image header when writing to an integer
     image, and reset to 0,1 (i.e. no scaling) for floating-point and binary
     images. Note that the -scaling option will therefore have no effect for
     floating-point or binary output images.

     The -axes option specifies which axes from the input image will be used to
     form the output image. This allows the permutation, omission, or addition
     of axes into the output image. The axes should be supplied as a
     comma-separated list of axis indices. If an axis from the input image is
     to be omitted from the output image, it must either already have a size of
     1, or a single coordinate along that axis must be selected by the user by
     using the -coord option. Examples are provided further below.

     The -bvalue_scaling option controls an aspect of the import of diffusion
     gradient tables. When the input diffusion-weighting direction vectors have
     norms that differ substantially from unity, the b-values will be scaled by
     the square of their corresponding vector norm (this is how multi-shell
     acquisitions are frequently achieved on scanner platforms). However in
     some rare instances, the b-values may be correct, despite the vectors not
     being of unit norm (or conversely, the b-values may need to be rescaled
     even though the vectors are close to unit norm). This option allows the
     user to control this operation and override MRrtix3's automatic detection.

EEXXAAMMPPLLEE  UUSSAAGGEESS

     _E_x_t_r_a_c_t_ _t_h_e_ _f_i_r_s_t_ _v_o_l_u_m_e_ _f_r_o_m_ _a_ _4_D_ _i_m_a_g_e_,_ _a_n_d_ _m_a_k_e_ _t_h_e_ _o_u_t_p_u_t_ _a_ _3_D_ _i_m_a_g_e_:
       $ mrconvert in.mif -coord 3 0 -axes 0,1,2 out.mif
     The -coord 3 0 option extracts, from axis number 3 (which is the fourth
     axis since counting begins from 0; this is the axis that steps across
     image volumes), only coordinate number 0 (i.e. the first volume). The
     -axes 0,1,2 ensures that only the first three axes (i.e. the spatial axes)
     are retained; if this option were not used in this example, then image
     out.mif would be a 4D image, but it would only consist of a single volume,
     and mrinfo would report its size along the fourth axis as 1.

     _E_x_t_r_a_c_t_ _s_l_i_c_e_ _n_u_m_b_e_r_ _2_4_ _a_l_o_n_g_ _t_h_e_ _A_P_ _d_i_r_e_c_t_i_o_n_:
       $ mrconvert volume.mif slice.mif -coord 1 24
     MRtrix3 uses a RAS (Right-Anterior-Superior) axis convention, and
     internally reorients images upon loading in order to conform to this as
     far as possible. So for non-exotic data, axis 1 should correspond
     (approximately) to the anterior-posterior direction.

     _E_x_t_r_a_c_t_ _o_n_l_y_ _e_v_e_r_y_ _o_t_h_e_r_ _v_o_l_u_m_e_ _f_r_o_m_ _a_ _4_D_ _i_m_a_g_e_:
       $ mrconvert all.mif every_other.mif -coord 3 1:2:end
     This example demonstrates two features: Use of the colon syntax to
     conveniently specify a number sequence (in the format 'start:step:stop');
     and use of the 'end' keyword to generate this sequence up to the size of
     the input image along that axis (i.e. the number of volumes).

     _A_l_t_e_r_ _t_h_e_ _i_m_a_g_e_ _h_e_a_d_e_r_ _t_o_ _r_e_p_o_r_t_ _a_ _n_e_w_ _i_s_o_t_r_o_p_i_c_ _v_o_x_e_l_ _s_i_z_e_:
       $ mrconvert in.mif isotropic.mif -vox 1.25
     By providing a single value to the -vox option only, the specified value
     is used to set the voxel size in mm for all three spatial axes in the
     output image.

     _A_l_t_e_r_ _t_h_e_ _i_m_a_g_e_ _h_e_a_d_e_r_ _t_o_ _r_e_p_o_r_t_ _a_ _n_e_w_ _a_n_i_s_o_t_r_o_p_i_c_ _v_o_x_e_l_ _s_i_z_e_:
       $ mrconvert in.mif anisotropic.mif -vox 1,,3.5
     This example will change the reported voxel size along the first and third
     axes (ideally left-right and inferior-superior) to 1.0mm and 3.5mm
     respectively, and leave the voxel size along the second axis (ideally
     anterior-posterior) unchanged.

     _T_u_r_n_ _a_ _s_i_n_g_l_e_-_v_o_l_u_m_e_ _4_D_ _i_m_a_g_e_ _i_n_t_o_ _a_ _3_D_ _i_m_a_g_e_:
       $ mrconvert 4D.mif 3D.mif -axes 0,1,2
     Sometimes in the process of extracting or calculating a single 3D volume
     from a 4D image series, the size of the image reported by mrinfo will be
     "X x Y x Z x 1", indicating that the resulting image is in fact also 4D,
     it just happens to contain only one volume. This example demonstrates how
     to convert this into a genuine 3D image (i.e. mrinfo will report the size
     as "X x Y x Z".

     _I_n_s_e_r_t_ _a_n_ _a_x_i_s_ _o_f_ _s_i_z_e_ _1_ _i_n_t_o_ _t_h_e_ _i_m_a_g_e_:
       $ mrconvert XYZD.mif XYZ1D.mif -axes 0,1,2,-1,3
     This example uses the value -1 as a flag to indicate to mrconvert where a
     new axis of unity size is to be inserted. In this particular example, the
     input image has four axes: the spatial axes X, Y and Z, and some form of
     data D is stored across the fourth axis (i.e. volumes). Due to insertion
     of a new axis, the output image is 5D: the three spatial axes (XYZ), a
     single volume (the size of the output image along the fourth axis will be
     1), and data D will be stored as volume groups along the fifth axis of the
     image.

     _M_a_n_u_a_l_l_y_ _r_e_s_e_t_ _t_h_e_ _d_a_t_a_ _s_c_a_l_i_n_g_ _p_a_r_a_m_e_t_e_r_s_ _s_t_o_r_e_d_ _w_i_t_h_i_n_ _t_h_e_ _i_m_a_g_e_ _h_e_a_d_e_r_
     _t_o_ _d_e_f_a_u_l_t_s_:
       $ mrconvert with_scaling.mif without_scaling.mif -scaling 0.0,1.0
     This command-line option alters the parameters stored within the image
     header that provide a linear mapping from raw intensity values stored in
     the image data to some other scale. Where the raw data stored in a
     particular voxel is I, the value within that voxel is interpreted as:
     value = offset + (scale x I).  To adjust this scaling, the relevant
     parameters must be provided as a comma-separated 2-vector of
     floating-point values, in the format "offset,scale" (no quotation marks).
     This particular example sets the offset to zero and the scale to one,
     which equates to no rescaling of the raw intensity data.

OOppttiioonnss  ffoorr  mmaanniippuullaattiinngg  ffuunnddaammeennttaall  iimmaaggee  pprrooppeerrttiieess

  _-_c_o_o_r_d axis selection  (multiple uses permitted)
     retain data from the input image only at the coordinates specified in the
     selection along the specified axis. The selection argument expects a
     number sequence, which can also include the 'end' keyword.

  _-_v_o_x sizes
     change the voxel dimensions reported in the output image header

  _-_a_x_e_s axes
     specify the axes from the input image that will be used to form the output
     image

  _-_s_c_a_l_i_n_g values
     specify the data scaling parameters used to rescale the intensity values

OOppttiioonnss  ffoorr  hhaannddlliinngg  JJSSOONN  ((JJaavvaaSSccrriipptt  OObbjjeecctt  NNoottaattiioonn))  ffiilleess

  _-_j_s_o_n___i_m_p_o_r_t file
     import data from a JSON file into header key-value pairs

  _-_j_s_o_n___e_x_p_o_r_t file
     export data from an image header key-value pairs into a JSON file

OOppttiioonnss  ttoo  mmooddiiffyy  ggeenneerriicc  hheeaaddeerr  eennttrriieess

  _-_c_l_e_a_r___p_r_o_p_e_r_t_y key  (multiple uses permitted)
     remove the specified key from the image header altogether.

  _-_s_e_t___p_r_o_p_e_r_t_y key value  (multiple uses permitted)
     set the value of the specified key in the image header.

  _-_a_p_p_e_n_d___p_r_o_p_e_r_t_y key value  (multiple uses permitted)
     append the given value to the specified key in the image header (this adds
     the value specified as a new line in the header value).

  _-_c_o_p_y___p_r_o_p_e_r_t_i_e_s source
     clear all generic properties and replace with the properties from the
     image / file specified.

SSttrriiddee  ooppttiioonnss

  _-_s_t_r_i_d_e_s spec
     specify the strides of the output data in memory; either as a
     comma-separated list of (signed) integers, or as a template image from
     which the strides shall be extracted and used. The actual strides produced
     will depend on whether the output image format can support it.

DDaattaa  ttyyppee  ooppttiioonnss

  _-_d_a_t_a_t_y_p_e spec
     specify output image data type. Valid choices are: float32, float32le,
     float32be, float64, float64le, float64be, int64, uint64, int64le,
     uint64le, int64be, uint64be, int32, uint32, int32le, uint32le, int32be,
     uint32be, int16, uint16, int16le, uint16le, int16be, uint16be, cfloat32,
     cfloat32le, cfloat32be, cfloat64, cfloat64le, cfloat64be, int8, uint8,
     bit.

DDWW  ggrraaddiieenntt  ttaabbllee  iimmppoorrtt  ooppttiioonnss

  _-_g_r_a_d file
     Provide the diffusion-weighted gradient scheme used in the acquisition in
     a text file. This should be supplied as a 4xN text file with each line is
     in the format [ X Y Z b ], where [ X Y Z ] describe the direction of the
     applied gradient, and b gives the b-value in units of s/mm^2. If a
     diffusion gradient scheme is present in the input image header, the data
     provided with this option will be instead used.

  _-_f_s_l_g_r_a_d bvecs bvals
     Provide the diffusion-weighted gradient scheme used in the acquisition in
     FSL bvecs/bvals format files. If a diffusion gradient scheme is present in
     the input image header, the data provided with this option will be instead
     used.

  _-_b_v_a_l_u_e___s_c_a_l_i_n_g mode
     enable or disable scaling of diffusion b-values by the square of the
     corresponding DW gradient norm (see Desciption). Valid choices are yes/no,
     true/false, 0/1 (default: automatic).

DDWW  ggrraaddiieenntt  ttaabbllee  eexxppoorrtt  ooppttiioonnss

  _-_e_x_p_o_r_t___g_r_a_d___m_r_t_r_i_x path
     export the diffusion-weighted gradient table to file in MRtrix format

  _-_e_x_p_o_r_t___g_r_a_d___f_s_l bvecs_path bvals_path
     export the diffusion-weighted gradient table to files in FSL (bvecs /
     bvals) format

OOppttiioonnss  ffoorr  iimmppoorrttiinngg  pphhaassee--eennccooddee  ttaabblleess

  _-_i_m_p_o_r_t___p_e___t_a_b_l_e file
     import a phase-encoding table from file

  _-_i_m_p_o_r_t___p_e___e_d_d_y config indices
     import phase-encoding information from an EDDY-style config / index file
     pair

OOppttiioonnss  ffoorr  eexxppoorrttiinngg  pphhaassee--eennccooddee  ttaabblleess

  _-_e_x_p_o_r_t___p_e___t_a_b_l_e file
     export phase-encoding table to file

  _-_e_x_p_o_r_t___p_e___e_d_d_y config indices
     export phase-encoding information to an EDDY-style config / index file
     pair

SSttaannddaarrdd  ooppttiioonnss

  _-_i_n_f_o
     display information messages.

  _-_q_u_i_e_t
     do not display information messages or progress status; alternatively,
     this can be achieved by setting the MRTRIX_QUIET environment variable to a
     non-empty string.

  _-_d_e_b_u_g
     display debugging messages.

  _-_f_o_r_c_e
     force overwrite of output files (caution: using the same file as input and
     output might cause unexpected behaviour).

  _-_n_t_h_r_e_a_d_s number
     use this number of threads in multi-threaded applications (set to 0 to
     disable multi-threading).

  _-_c_o_n_f_i_g key value  (multiple uses permitted)
     temporarily set the value of an MRtrix config file entry.

  _-_h_e_l_p
     display this information page and exit.

  _-_v_e_r_s_i_o_n
     display version information and exit.

AAUUTTHHOORR
     J-Donald Tournier (jdtournier@gmail.com) and Robert E. Smith
     (robert.smith@florey.edu.au)

CCOOPPYYRRIIGGHHTT
     Copyright (c) 2008-2023 the MRtrix3 contributors.
     This Source Code Form is subject to the terms of the Mozilla Public
     License, v. 2.0. If a copy of the MPL was not distributed with this
     file, You can obtain one at http://mozilla.org/MPL/2.0/.
     Covered Software is provided under this License on an "as is"
     basis, without warranty of any kind, either expressed, implied, or
     statutory, including, without limitation, warranties that the
     Covered Software is free of defects, merchantable, fit for a
     particular purpose or non-infringing.
     See the Mozilla Public License v. 2.0 for more details.
     For more details, see http://www.mrtrix.org/.

RREEFFEERREENNCCEESS
     Tournier, J.-D.; Smith, R. E.; Raffelt, D.; Tabbara, R.; Dhollander, T.;
     Pietsch, M.; Christiaens, D.; Jeurissen, B.; Yeh, C.-H. & Connelly, A.
     MRtrix3: A fast, flexible and open software framework for medical image
     processing and visualisation. NeuroImage, 2019, 202, 116137

